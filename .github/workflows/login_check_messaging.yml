name: UD System Login Check

on:
  schedule:
    # UTC 22:30 = JST 07:30 (毎日)
    - cron: "30 22 * * *"
  workflow_dispatch:

jobs:
  login-check:
    runs-on: ubuntu-latest
    steps:
      # リポジトリのチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # JSTの日付と曜日を計算
      - name: Get JST date and day of the week
        id: get_date
        run: |
          bash scripts/date_check.sh

      # 通知先とメッセージを設定
      - name: Set notification variables
        id: set_notification
        run: |
          IS_WEEKDAY=${{ steps.get_date.outputs.is_weekday }}
          if [ "$IS_WEEKDAY" == true ]; then
            echo "group_id=${{ secrets.GROUP_ID }}" >> "$GITHUB_OUTPUT"
            {
              echo "message<<EOF"
              echo "本日、出勤の皆様へ"
              echo ""
              echo "お世話になっております。"
              echo "エラーにより、ビルダーが開かなくなっております。"
              echo "復旧次第再度お知らせいたします。"
              echo "それまでは、自宅待機でお願いいたします。"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            echo "group_id=${{ secrets.GROUP_ID_WEEKEND }}" >> "$GITHUB_OUTPUT"
            {
              echo "message<<EOF"
              echo "お世話になっております。"
              echo "現在、ビルダーが停止している状態です。"
              echo "対応可能な開発の方がいらっしゃいましたら、ご対応いただけますと助かります。"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          fi

      # ページのアクセスとログインチェック
      - name: Check page accessibility and login
        id: page_access_check
        env:
          USERNAME: ${{ secrets.LOGIN_USERNAME }}
          PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
        run: |
          bash scripts/page_access_check.sh "$USERNAME" "$PASSWORD"

      # page_access_checkのoutputを出力してみる
      - name: Output page_access_check outputs
        run: |
          echo "Page Accessible: ${{ steps.page_access_check.outputs.page_accessible }}"

      # LINE通知
      - name: Notify LINE if failed
        if: ${{ steps.page_access_check.outputs.page_accessible || 'false' }} == 'false'
        env:
          TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
        run: |
          MSG=$(echo "${{ steps.set_notification.outputs.message }}")
          TO=$(echo "${{ steps.set_notification.outputs.group_id }}")
          bash scripts/line_notify.sh "$TOKEN" "$TO" "$MSG"

      # 「MessagingAPIのテスト」のLINEグループに通知
      - name: Notify LINE for test result
        env:
          TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
        run: |
          # JSTの現在時刻を取得
          CURRENT_TIME_JST=$(date -u -d '+9 hours' '+%Y年 %m月%d日 (%H時%M分 GMT + 9)')
          
          # テスト結果に応じたメッセージを作成
          if ${{ steps.page_access_check.outputs.page_accessible || 'false' }} == 'true'; then
            MSG='【ログイン成功】\n${CURRENT_TIME_JST}\nシステムのログイン検証に成功しました'
          else
            MSG='【ログイン失敗】\n${CURRENT_TIME_JST}\nシステムのログイン検証に失敗しました'
          fi

          # 通知先グループID
          TO=${{ secrets.GROUP_ID_TEST }}

          # LINE通知スクリプトを呼び出し
          bash scripts/line_notify.sh "$TOKEN" "$TO" "$MSG"
